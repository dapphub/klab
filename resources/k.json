{
  "t": {
    "k": "VKCell",
    "exit-code": "1",
    "mode": "NORMAL",
    "schedule": "ISTANBUL",
    "ethereum": {
      "evm": {
        "output": "_ => VOutput",
        "statusCode": "VStatusCode",
        "callStack": "VCallStack",
        "interimStates": "_",
        "touchedAccounts": "_ => ?_",
        "callState": {
          "program": "#parseByteStack({CODE})",
          "jumpDests": "#computeValidJumpDests(#parseByteStack({CODE}))",
          "id": "ACCT_ID",
          "caller": "CALLER_ID",
          "callData": "VCallData",
          "callValue": "VCallValue",
          "wordStack": "VWordStack",
          "localMem": ".Map => ?_",
          "pc": "VPC",
          "gas": "VGas",
          "memoryUsed": "0 => ?_",
          "callGas": "_ => ?_",
          "static": "VStatic",
          "callDepth": "VCallDepth"
        },
        "substate": {
          "selfDestruct": "VSelfDestruct",
          "log": "_ => ?_",
          "refund": "_ => ?_"
        },
        "gasPrice": "_",
        "origin": "ORIGIN_ID",
        "blockhashes": "_",
        "block" : {
          "previousHash": "_",
          "ommersHash": "_",
          "coinbase": "_",
          "stateRoot": "_",
          "transactionsRoot": "_",
          "receiptsRoot": "_",
          "logsBloom": "_",
          "difficulty": "_",
          "number": "BLOCK_NUMBER",
          "gasLimit": "_",
          "gasUsed": "_",
          "timestamp": "TIME",
          "extraData": "_",
          "mixHash": "_",
          "blockNonce": "_",
          "ommerBlockHeaders": "_"
        }
      },
      "network": {
        "chainID": "VChainId",
        "activeAccounts": "VActiveAccounts",
        "accounts": [],
        "txOrder": "_",
        "txPending": "_",
        "messages": "_"
      }
    }
  },
  "requires": [
    "#rangeAddress(ACCT_ID)",
    "andBool ACCT_ID =/=Int 0",
    "andBool #notPrecompileAddress(ACCT_ID)",
    "andBool #rangeAddress(CALLER_ID)",
    "andBool #rangeAddress(ORIGIN_ID)",
    "andBool #rangeUInt(256, TIME)",
    "andBool #rangeUInt(256, ACCT_ID_balance)",
    "andBool #rangeUInt(256, ECREC_BAL)",
    "andBool #rangeUInt(256, SHA256_BAL)",
    "andBool #rangeUInt(256, RIP160_BAL)",
    "andBool #rangeUInt(256, ID_BAL)",
    "andBool #rangeUInt(256, MODEXP_BAL)",
    "andBool #rangeUInt(256, ECADD_BAL)",
    "andBool #rangeUInt(256, ECMUL_BAL)",
    "andBool #rangeUInt(256, ECPAIRING_BAL)",
    "andBool #rangeUInt(256, BLAKE2_BAL)",
    "andBool VCallDepth <=Int 1024",
    "andBool #rangeUInt(256, VCallValue)",
    "andBool #rangeUInt(256, VChainId)"
  ]
}
